----20150127----
- orignal ptp with cylinder tested to compare Fz using position lookup.
  . result: Fz_comp_cylinder_new_old.fig  (\yoo\temp); ptp_cylinder_20150127_orig.mat , ptpcylinder_20150127_proved.mat) 
  . Fz using position (pressure lookup using position) > Fz using particle
  . Fz suing position is correct (it has been compared with exp. data in paper)

----20150129-----
- force vs. disp. graph for vertical exp.
  . comp_exp_sim_sphere_20150129

----20150203-----
- cubiod exp. for Lateral behavior
  . cubiod_exp_01.mat (2012_19_01-10_03_01-SoilExpLog_001.txt)
  . cubiod_exp_02.mat (2012_19_01-10_11_59-SoilExpLog_002.txt)
  . cubiod_exp_14.mat (2012_30_01-10_11_59-SoilExpLog_002.txt)
  ref. : cubiod_ExperimentDescription.txt

- sphere exp. for Lateral behaviour
  . Lateral_2011_04_05_11_50_22.mat (2011_04_05_11_50_22log.csv)
  . ploted: RefExp3_Pas1.pdf, video exist
  . Exp3, Try1: sc black foot from soils surface 2cm down then forward (in x direction) 15cm then 10cm up
  . Lateral_good_result201523172859.mat (result2015_2_3-17_28_59.csv): ptp20150203.zip

- sphere exp. for Vertical behaviour
  . Vertical_2011_05_04_14_12_14.mat (2011_05_04_14_12_14log.csv)
 
----20150212----  
- shearCellForce add
- made calcForce code something clean (unnecessary things deleted)
- for test simulation with virtual position behavior
  . option 'k' used for lateral test simulation.
  . option 'j' used for virtual test simulation.
- for test simulation with real position behavior from real experiment
  . option 'K' used for lateral test simulation.
  . option 'J' used for virtual test simulation.
- very nice result >> good_lateral_result2015_2_12-17_3_43.csv  
  . option 'K' used for simulation with position behavior from real experiment.
  . cell setup:  cell numbers (200, 10, 30) , start(-200, -20, -30), end(200, 0,30)
- very nice result >> good_vertical_result2015_2_12-17_27_9.csv  
  . option 'j used for sim.
  . cell setup:  cell numbers (200, 20, 30) , start(-200, -40, -30), end(200, 0,30)
- prepared configuration.
  . ptp_v : test for vertical 
  . ptp_l : test for lateral
  
----20150309------
- compile method changed :  make  --> cmake ./  after that,   make
- Eigen library added to use Vector and other math tools
- axis changed : top on Y axis  >> top on Z axis
- some variables and functions which are not used cleaned 


----20150310------
- source code from ptp_20150309
- ptpSoil mars plugin setup for ptp done
  . for source coding: mars_dev/simulation/mars/plugin/ptpSoil
  . for running : mars_dev/install/configuration/myTest
- osg used
- 3D mouse used  
- configSim(); : config options for foot test behaviors
  . Value = 1  :  vertical exp.
  . Value = 2  :  lateral exp.
- file access for logging commented out  

----20150414------
- extended to six feet
- deleted some codes that are unnecessary (have to check that's correct!)

----201505xx------
There are two different versions of PTP 
1. sim/ptpSoil/ ...in MARS core:
. this has been tested to prove an encapsulation of PTP instance in Heightmap object.
. collision callBack has been build 

2. Mars Plugin: 
. it aims to dynamic soil instance


----20150602 -----
- unstable problem with the low particles has been solved by spring and damper

  	  for(int i=0;i<6;i++) {
		if(foot[i].contact == true) {		     
		//	printf("foot collision\n");
	  	outF[i].x() = forceR[i].x;	
  	    outF[i].y() = forceR[i].y;	
			if(foot_pos[i].z() > -0.2) outF[i].z() = forceR[i].z;
			else {
				outF[i].z() = forceR[i].z + (foot_pos[i].z()+0.2)*2200 + foot_vel[i].z()*10;	
				printf(",,,,,%f  -- %f\n", foot_pos[i].z(), outF[i].z());
			}
 		    if(ABS(outF[i].z()) < 100) control->nodes->applyForce(num_foot[i], -outF[i]);
 		    else if(outF[i].z() > 100 ) { 
				outF[i].z() = 100;
				control->nodes->applyForce(num_foot[i], -outF[i]);
			}
			else if(outF[i].z() < -100) { 
				outF[i].z() = -100;				
				control->nodes->applyForce(num_foot[i], -outF[i]);
			}
 		    last_outF[i] =outF[i];


  
  
  
  
  


 


